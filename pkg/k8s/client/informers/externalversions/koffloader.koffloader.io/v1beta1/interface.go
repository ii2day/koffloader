// Copyright 2024 Authors of koffloader-io
// SPDX-License-Identifier: Apache-2.0

// Code generated by informer-gen. DO NOT EDIT.

package v1beta1

import (
	internalinterfaces "github.com/koffloader-io/koffloader/pkg/k8s/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// KClusters returns a KClusterInformer.
	KClusters() KClusterInformer
	// KClusterGroups returns a KClusterGroupInformer.
	KClusterGroups() KClusterGroupInformer
	// ServiceExportPolicies returns a ServiceExportPolicyInformer.
	ServiceExportPolicies() ServiceExportPolicyInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// KClusters returns a KClusterInformer.
func (v *version) KClusters() KClusterInformer {
	return &kClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// KClusterGroups returns a KClusterGroupInformer.
func (v *version) KClusterGroups() KClusterGroupInformer {
	return &kClusterGroupInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ServiceExportPolicies returns a ServiceExportPolicyInformer.
func (v *version) ServiceExportPolicies() ServiceExportPolicyInformer {
	return &serviceExportPolicyInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
